-- Create the user/schema for the database
CREATE USER next_gen_restaurant;

-- Grant necessary privileges
GRANT CONNECT, RESOURCE TO next_gen_restaurant;

-- Switch to the new user
ALTER SESSION SET CURRENT_SCHEMA = next_gen_restaurant;

-- Create table for storing customer information
CREATE TABLE Customers (
    CustomerID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Name VARCHAR2(100) NOT NULL,
    Age NUMBER CHECK (Age >= 0),
    PhoneNumber VARCHAR2(15) NOT NULL
);

-- Create table for storing server information
CREATE TABLE Servers (
    ServerID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Name VARCHAR2(100) NOT NULL,
    PhoneNumber VARCHAR2(15) NOT NULL
);

-- Create table for storing kitchen staff information
CREATE TABLE KitchenStaff (
    StaffID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Name VARCHAR2(100) NOT NULL,
    Role VARCHAR2(50) NOT NULL
);

-- Create table for storing orders information
CREATE TABLE Orders (
    OrderID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CustomerID NUMBER,
    OrderDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID)
);

-- Create table for storing order items
CREATE TABLE OrderItems (
    OrderItemID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    OrderID NUMBER,
    ItemName VARCHAR2(100) NOT NULL,
    Price NUMBER(10, 2) NOT NULL,
    FOREIGN KEY (OrderID) REFERENCES Orders(OrderID)
);

-- Create table for storing check information
CREATE TABLE Checks (
    CheckID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    OrderID NUMBER,
    TotalAmount NUMBER(10, 2) NOT NULL,
    IsSplit CHAR(1) DEFAULT 'N', -- 'Y' for Yes, 'N' for No
    FOREIGN KEY (OrderID) REFERENCES Orders(OrderID)
);

-- Create table for storing table information
CREATE TABLE Tables (
    TableID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    TableNumber NUMBER NOT NULL,
    NumberOfPeople NUMBER NOT NULL,
    IsOccupied CHAR(1) DEFAULT 'N' -- 'Y' for Yes, 'N' for No
);

-- Create table for storing employee information
CREATE TABLE Employees (
    EmployeeID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Name VARCHAR2(100) NOT NULL,
    Role VARCHAR2(50) NOT NULL,
    PayrollDetails VARCHAR2(255) NOT NULL
);

-- Create table for storing payment information
CREATE TABLE Payments (
    PaymentID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    OrderID NUMBER,
    PaymentMethod VARCHAR2(50) NOT NULL,
    Amount NUMBER(10, 2) NOT NULL,
    Gratuity NUMBER(10, 2) DEFAULT 0.00,
    FOREIGN KEY (OrderID) REFERENCES Orders(OrderID)
);

-- Create table for storing restaurant management information
CREATE TABLE RestaurantManagement (
    ManagementID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    MapDetails VARCHAR2(255),
    WaitQueueDetails VARCHAR2(255)
);

-- Create table for hosts/hostesses information
CREATE TABLE Hosts (
    HostID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Name VARCHAR2(100) NOT NULL,
    AssignedTableID NUMBER,
    FOREIGN KEY (AssignedTableID) REFERENCES Tables(TableID)
);

-- Create table for storing reservation information
CREATE TABLE Reservations (
    ReservationID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CustomerID NUMBER,
    ReservationDate TIMESTAMP,
    Status VARCHAR2(50),
    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID)
);

-- Create table for storing information about the executive team
CREATE TABLE ExecutiveTeam (
    ExecutiveID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Name VARCHAR2(100) NOT NULL,
    Position VARCHAR2(50) NOT NULL
);

-- Create table for storing system passwords
CREATE TABLE SystemPasswords (
    PasswordID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    UserID NUMBER,
    HashedPassword VARCHAR2(255) NOT NULL
);
